{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAKMC,EAAW,CACfC,YAAaC,SAASC,cAAc,6BACpCC,WAAYF,SAASC,cAAc,gBACnCE,KAAMH,SAASC,cAAc,YAC7BG,MAAOJ,SAASC,cAAc,aAC9BI,GAAIL,SAASC,cAAc,QAIzBK,EAAc,EACdC,EAAU,GACVC,EAAQV,EAASC,YAAYU,MAM3BC,EAAW,IAAIC,sBAiCrB,SAAoBC,GAClBJ,EAAQV,EAASC,YAAYU,MAC7BG,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,iBACRT,GAAe,GACf,EAAAU,EAAAC,aAAYT,EAAOF,EAAaC,GAASW,MAAK,SAAAC,GAC5C,IAAIC,EAAaD,EAAKE,UAAYd,EAClCT,EAASK,KAAKmB,mBAAmB,YAAaC,EAAaJ,EAAKK,OACjD,IAAIC,EAAAC,GAAJ,CAAmB,cAE9BpB,GAAec,IACjBV,EAASiB,UAAU7B,EAASM,OAC5BwB,EAAAC,OAAOC,KACL,8D,UAlDI,CACdC,WAAY,U,SAKCC,I,OAAAA,EAAfP,EAAA7B,EAAA,CAAA6B,EAAAQ,GAAAC,MAAA,SAAAC,EAA6BC,G,kEAC3BA,EAAIC,iBACJvC,EAASK,KAAKmC,UAAY,GAC1BhC,EAAc,EACdE,EAAQV,EAASC,YAAYU,OAC7B,EAAAO,EAAAC,aAAYT,EAAOF,EAAaC,GAC7BW,MAAK,SAAAC,GACJ,IAAIC,EAAaD,EAAKE,UAAYd,EAC9BY,EAAKK,KAAKe,OAAS,EACrBX,EAAAC,OAAOW,QAAQ,oBAAmCC,OAAftB,EAAKE,UAAU,aAElDqB,SAASb,OAAOc,QACd,4EAGJ7C,EAASK,KAAKmB,mBAAmB,YAAaC,EAAaJ,EAAKK,OAChE,IAAIC,EAAAC,GAAJ,CAAmB,cAEfpB,EAAcc,EAChBV,EAASkC,QAAQ9C,EAASM,OAE1BwB,EAAAC,OAAOC,KACL,6D,IAILe,MAAMC,G,4CA1BiBC,MAAAC,KAAAC,U,CAoD5B,SAAS1B,EAAaJ,GACpB,OAAOA,EACJ+B,KACC,SAAAC,G,IACEC,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,U,MAEA,8FAE4EjB,OAAhDY,EAAc,oCAAsDZ,OAApBW,EAAa,SAG/EX,OAHsFa,EAAK,uGAM3Fb,OAHAc,EAAM,qEAMHd,OAHHe,EAAM,4EAMFf,OAHDgB,EAAS,2EAGEhB,OAAViB,EAAU,8C,IAK3BC,KAAK,G,CAGV,SAASb,IACPlB,EAAAC,OAAOc,QACL,2E,CA3DJ7C,EAASI,WAAW0D,iBAAiB,U,SA7BRxB,G,OAAdJ,EAAae,MAAAC,KAAAC,U","sources":["src/js/scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { fetchSearch } from './search-api';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst elements = {\n  searchQuery: document.querySelector('input[name=\"searchQuery\"]'),\n  searchForm: document.querySelector('.search-form'),\n  list: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n  up: document.querySelector('.up'),\n};\n\n// const { height: cardHeight } = card.getBoundingClientRect();\nlet currentPage = 0;\nlet perPage = 40;\nlet input = elements.searchQuery.value;\n\nconst options = {\n  rootMargin: '400px',\n};\n\nconst observer = new IntersectionObserver(onLoadMore, options);\n\nasync function hendlerSearch(evt) {\n  evt.preventDefault();\n  elements.list.innerHTML = '';\n  currentPage = 1;\n  input = elements.searchQuery.value;\n  fetchSearch(input, currentPage, perPage)\n    .then(data => {\n      let total_Page = data.totalHits / perPage;\n      if (data.hits.length > 0) {\n        Notify.success(`Hooray! We found ${data.totalHits} images.`);\n      } else {\n        Notiflix.Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n      elements.list.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n      new SimpleLightbox('.gallery a');\n\n      if (currentPage < total_Page) {\n        observer.observe(elements.guard);\n      } else {\n        Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    })\n    .catch(onSubmitError);\n}\n\nelements.searchForm.addEventListener('submit', hendlerSearch);\n\nfunction onLoadMore(entries) {\n  input = elements.searchQuery.value;\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchSearch(input, currentPage, perPage).then(data => {\n        let total_Page = data.totalHits / perPage;\n        elements.list.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n        var lightbox = new SimpleLightbox('.gallery a');\n\n        if (currentPage >= total_Page) {\n          observer.unobserve(elements.guard);\n          Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      });\n    }\n  });\n}\n\nfunction createMarkup(data) {\n  return data\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"photo-card\">\n       <div class=\"img_block\">\n    <a class=\"gallery_link\" href =${largeImageURL}><img class=\"gallery_image\" src=${webformatURL} alt=${tags} loading=\"lazy\" /></a></div>\n    <ul class=\"info\">\n      <li class=\"info-item\">\n        Likes<p>${likes}</p>\n      </li>\n      <li class=\"info-item\">\n        Views<p>${views}</p>\n        </li>\n        <li class=\"info-item\">\n        Comments<p>${comments}</p>\n        </li>\n      <li class=\"info-item\">\n        Downloads<p>${downloads}</p>\n        </li>\n        </ul>\n  </li>`\n    )\n    .join('');\n}\n\nfunction onSubmitError() {\n  Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.'\n  );\n}\n"],"names":["$bpxeT","parcelRequire","$dd9e54e108f59881$var$elements","searchQuery","document","querySelector","searchForm","list","guard","up","$dd9e54e108f59881$var$currentPage","$dd9e54e108f59881$var$perPage","$dd9e54e108f59881$var$input","value","$dd9e54e108f59881$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$fxMCL","fetchSearch","then","data","total_Page","totalHits","insertAdjacentHTML","$dd9e54e108f59881$var$createMarkup","hits","$parcel$interopDefault","$5IjG7","unobserve","$h6c0i","Notify","info","rootMargin","$dd9e54e108f59881$var$_hendlerSearch","$2TvXO","mark","_callee","evt","preventDefault","innerHTML","length","success","concat","Notiflix","failure","observe","catch","$dd9e54e108f59881$var$onSubmitError","apply","this","arguments","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","addEventListener"],"version":3,"file":"scroll.13b93f9c.js.map"}