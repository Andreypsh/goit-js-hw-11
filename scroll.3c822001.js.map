{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAAW,CACfC,YAAaC,SAASC,cAAc,6BACpCC,WAAYF,SAASC,cAAc,gBACnCE,KAAMH,SAASC,cAAc,YAC7BG,MAAOJ,SAASC,cAAc,aAC9BI,GAAIL,SAASC,cAAc,QAI7B,IAAIK,EAAc,EAEdC,EAAQT,EAASC,YAAYS,MAEjC,MAIMC,EAAW,IAAIC,sBAiCrB,SAAoBC,GAClBJ,EAAQT,EAASC,YAAYS,MAC7BG,EAAQC,SAAQC,IACVA,EAAMC,iBACRR,GAAe,GACf,EAAAS,EAAAC,aAAYT,EAAOD,EA7CX,IA6CiCW,MAAKC,IAC5C,IAAIC,EAAaD,EAAKE,UA9ChB,GA+CNtB,EAASK,KAAKkB,mBAAmB,YAAaC,EAAaJ,EAAKK,OACjD,IAAIC,EAAAC,GAAJ,CAAmB,cAE9BnB,GAAea,IACjBV,EAASiB,UAAU5B,EAASM,OAC5BR,EAAA+B,OAAOC,KACL,8D,UAlDI,CACdC,WAAY,UAyDd,SAASP,EAAaJ,GACpB,OAAOA,EACJY,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEA,8FAE4BL,oCAAgDD,SAAoBE,uGAGtFC,qEAGAC,4EAGGC,2EAGCC,iDAKjBC,KAAK,G,CAGV,SAASC,IACP3C,EAAA+B,OAAOa,QACL,2E,CA3DJ1C,EAASI,WAAWuC,iBAAiB,UA7BrCC,eAA6BC,GAC3BA,EAAIC,iBACJ9C,EAASK,KAAK0C,UAAY,GAC1BvC,EAAc,EACdC,EAAQT,EAASC,YAAYS,OAC7B,EAAAO,EAAAC,aAAYT,EAAOD,EAdP,IAeTW,MAAKC,IACJ,IAAIC,EAAaD,EAAKE,UAhBd,GAiBJF,EAAKK,KAAKuB,OAAS,EACrBlD,EAAA+B,OAAOoB,QAAQ,oBAAoB7B,EAAKE,qBAExC4B,SAASrB,OAAOa,QACd,4EAGJ1C,EAASK,KAAKkB,mBAAmB,YAAaC,EAAaJ,EAAKK,OAChE,IAAIC,EAAAC,GAAJ,CAAmB,cAEfnB,EAAca,EAChBV,EAASwC,QAAQnD,EAASM,OAE1BR,EAAA+B,OAAOC,KACL,6DACD,IAGJsB,MAAMX,E","sources":["src/js/scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { fetchSearch } from './search-api';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst elements = {\n  searchQuery: document.querySelector('input[name=\"searchQuery\"]'),\n  searchForm: document.querySelector('.search-form'),\n  list: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n  up: document.querySelector('.up'),\n};\n\n// const { height: cardHeight } = card.getBoundingClientRect();\nlet currentPage = 0;\nlet perPage = 40;\nlet input = elements.searchQuery.value;\n\nconst options = {\n  rootMargin: '400px',\n};\n\nconst observer = new IntersectionObserver(onLoadMore, options);\n\nasync function hendlerSearch(evt) {\n  evt.preventDefault();\n  elements.list.innerHTML = '';\n  currentPage = 1;\n  input = elements.searchQuery.value;\n  fetchSearch(input, currentPage, perPage)\n    .then(data => {\n      let total_Page = data.totalHits / perPage;\n      if (data.hits.length > 0) {\n        Notify.success(`Hooray! We found ${data.totalHits} images.`);\n      } else {\n        Notiflix.Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n      elements.list.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n      new SimpleLightbox('.gallery a');\n\n      if (currentPage < total_Page) {\n        observer.observe(elements.guard);\n      } else {\n        Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    })\n    .catch(onSubmitError);\n}\n\nelements.searchForm.addEventListener('submit', hendlerSearch);\n\nfunction onLoadMore(entries) {\n  input = elements.searchQuery.value;\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchSearch(input, currentPage, perPage).then(data => {\n        let total_Page = data.totalHits / perPage;\n        elements.list.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n        var lightbox = new SimpleLightbox('.gallery a');\n\n        if (currentPage >= total_Page) {\n          observer.unobserve(elements.guard);\n          Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      });\n    }\n  });\n}\n\nfunction createMarkup(data) {\n  return data\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"photo-card\">\n       <div class=\"img_block\">\n    <a class=\"gallery_link\" href =${largeImageURL}><img class=\"gallery_image\" src=${webformatURL} alt=${tags} loading=\"lazy\" /></a></div>\n    <ul class=\"info\">\n      <li class=\"info-item\">\n        Likes<p>${likes}</p>\n      </li>\n      <li class=\"info-item\">\n        Views<p>${views}</p>\n        </li>\n        <li class=\"info-item\">\n        Comments<p>${comments}</p>\n        </li>\n      <li class=\"info-item\">\n        Downloads<p>${downloads}</p>\n        </li>\n        </ul>\n  </li>`\n    )\n    .join('');\n}\n\nfunction onSubmitError() {\n  Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.'\n  );\n}\n"],"names":["$iQIUW","parcelRequire","$22b277e67ad1df42$var$elements","searchQuery","document","querySelector","searchForm","list","guard","up","$22b277e67ad1df42$var$currentPage","$22b277e67ad1df42$var$input","value","$22b277e67ad1df42$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$arR5w","fetchSearch","then","data","total_Page","totalHits","insertAdjacentHTML","$22b277e67ad1df42$var$createMarkup","hits","$parcel$interopDefault","$fZKcF","unobserve","Notify","info","rootMargin","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$22b277e67ad1df42$var$onSubmitError","failure","addEventListener","async","evt","preventDefault","innerHTML","length","success","Notiflix","observe","catch"],"version":3,"file":"scroll.3c822001.js.map"}